<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.dao.IUserDao">

    <!--配置 查询结果的列名和实体类的属性名的对应关系-->
    <resultMap id="userMap" type="User">
        <!--主键字段的对应-->
        <id property="userId" column="id"></id>
        <!--非主键字段的对应-->
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>
    </resultMap>
    <!--配置查询所有 id是方法的名称-->
    <select id="findAll" resultMap="userMap">
        select * from user;
    </select>
    <!--保存用户-->
    <insert id="saveUser" parameterType="com.itheima.domain.User">
        <!--配置插入操作后，获取插入数据的id-->
        <selectKey keyProperty="userId" keyColumn="" resultType="Integer" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user values(null,#{userName},#{userBirthday},#{userSex},#{userAddress});
    </insert>

    <!--更新用户-->
    <update id="updateUser" parameterType="com.itheima.domain.User">
        update user set username=#{userName},birthday=#{userBirthday},sex=#{userSex},address=#{userAddress} where id=#{userId};
    </update>

    <!--删除用户-->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id = #{adfds};
    </delete>
    
    <!--根据id查询用户-->
    <select id="findById" parameterType="Integer" resultType="com.itheima.domain.User">
        select * from user where id = #{dfwefw};
    </select>

    <!--根据名称模糊查询  第二种写法，源码固定把值写到了value里，存在危险-->
    <select id="findByName" parameterType="string" resultType="com.itheima.domain.User">
        Select * from user where username like #{sdfdsf};
    <!--select * from user where username like '%${value}%';-->
    </select>

    <!--根据queryvo的查询条件查询用户-->
    <select id="findUserByVo" parameterType="com.itheima.domain.QueryVo" resultMap="userMap">
        Select * from user where username like #{user.userName};
    </select>

<!--获取用户的总记录条数-->
    <select id="findTotal" resultType="Integer">
        select count(id) from user
    </select>

    <!--根据条件查询-->
    <!--
    <select id="findUserByCondition" resultMap="userMap" parameterType="user">
        select * from user where 1=1
        <if test="userName != null">
            and username = #{userName}
        </if>
        <if test="userSex != null">
            and sex = #{userSex}
        </if>
    </select>
    -->
    <select id="findUserByCondition" resultMap="userMap" parameterType="user">
        select * from user
        <where>
            <if test="userName != null">
                and username = #{userName}
            </if>
            <if test="userSex != null">
                and sex = #{userSex}
            </if>
        </where>
    </select>

    <!--根据queryvo中的id集合实现查询用户列表-->
    <select id="findUserInIds" resultMap="userMap" parameterType="queryvo">
        select * from user
        <where>
            <if test="ids != null and ids.size() > 0">
                <foreach collection="ids" open="and id in(" close=")" item="idsdfds" separator=",">
                    #{idsdfds}
                </foreach>

            </if>
        </where>
    </select>

    <!--查询id>65的user-->
    <select id="findUserGTId" resultMap="userMap" parameterType="Integer">
        select * from user
        <where>
            id <![CDATA[<]]> #{sdfsf}
        </where>

    </select>


</mapper>